s e c t i o n  . t e x t
g l o b a l  _s t a r t
_s t a r t :
 mov eax , 4 		; length o f array
 mov ebx , 0 		; ebx w i l l be used f o r s t o r in g our r e s u l t sum
 mov ecx , x 		; ecx w i l l p o in t t o the current element t o be summed

 t :
add ebx , [ ecx ] 	; va lues po inted by ecx i s added t o ebx & s t or ed in ebx
			 ; f o r f i r s t time (0+1 = 1 ) , second time (1+3=4) , (4+2=6 ) & (6+2=8)
add ecx , 1		 ; move p o in t er t o next element
dec eax ;
jnz t 			; i f counter !=0 , then l o op again
add ebx , ' 0 '
mov [sum ] , ebx 	; r e s u l t i s s t or ed in v a r i a b l e sum
mov edx , 1 		; message length
mov ecx , sum		; message t o wr ite
mov eax , 4 		; s y s c a l l wr ite
mov ebx , 1
in t 80h
s e c t i o n . data
g l o b a l  x
x : db 1 ,2 ,3 ,4
sum db 1